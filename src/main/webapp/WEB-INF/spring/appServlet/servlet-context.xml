<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
		xmlns="http://www.springframework.org/schema/mvc"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:beans="http://www.springframework.org/schema/beans"
		xmlns:mvc="http://www.springframework.org/schema/mvc"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:aop="http://www.springframework.org/schema/aop" xmlns:p="http://www.springframework.org/schema/p"
		xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<!-- @ResponseBody로 String 처리할때 한글처리 -->
			<beans:bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<beans:property name="supportedMediaTypes">
					<beans:list>
						<beans:value>text/html;charset=UTF-8</beans:value>
					</beans:list>
				</beans:property>
			</beans:bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	<mvc:default-servlet-handler />
	<aop:aspectj-autoproxy />

	<context:component-scan base-package="project" />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value="" />
		<beans:property name="order" value="2" />
	</beans:bean>

	<mvc:view-controller path="/" view-name="" />

	<beans:bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
		<beans:property name="defaultLocale" value="ko" />
	</beans:bean>

	<!-- Tiles 뷰 리졸버 -->
	<beans:bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
		<beans:property name="order" value="1" />
	</beans:bean>
	<!-- Tiles 설정 파일 -->
	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions" value="classpath:tiles/*.xml" />
		<beans:property name="preparerFactoryClass" value="org.springframework.web.servlet.view.tiles3.SpringBeanPreparerFactory"/>
	</beans:bean>

	<!-- multiple fileUpload -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="52428800" />
		<beans:property name="maxInMemorySize" value="1000000" />
		<beans:property name="defaultEncoding" value="utf-8" />
	</beans:bean>

	<!-- swagger -->
	<beans:bean id="swagger2Config" class="springfox.documentation.swagger2.configuration.Swagger2DocumentationConfiguration" />
	<mvc:resources location="classpath:META-INF/resources/" mapping="swagger-ui.html" />
	<mvc:resources location="classpath:META-INF/resources/webjars/" mapping="/webjars/**"/>

	<!-- websocket -->
<!--    <beans:bean id="chatHandler" class="project.chat.ChatWebSocketHandler" />-->
<!--    -->
<!-- 	<websocket:handlers>-->
<!--		<websocket:mapping handler="chatHandler" path="/chat-ws" />-->
<!--		<websocket:handshake-interceptors>-->
<!--		  <beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor" />-->
<!--		</websocket:handshake-interceptors>	-->
<!--	</websocket:handlers>-->

    <!-- batch -->
    <!-- 
    <task:annotation-driven executor="executor" scheduler="scheduler"/>
    <task:scheduler id="scheduler" pool-size="10" />
    <task:executor id="executor" keep-alive="5" pool-size="10-20" queue-capacity="10" rejection-policy="ABORT" />
    -->
</beans:beans>
