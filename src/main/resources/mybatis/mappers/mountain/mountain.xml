<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mountain">
    <!-- DATE 추가시 일 기준으로 반영됨-->
<!--    <select id="selectMountainByRank" resultType="map" parameterType="int">-->
<!--        <![CDATA[-->
<!--            SELECT thisWeek.MTNM, NVL(prevWeek.rank - thisWeek.rank,'-999') changeRank-->
<!--            FROM (-->
<!--            SELECT g.MTNM,DENSE_RANK() OVER (ORDER BY COUNT(g.MTNM) DESC) rank-->
<!--            FROM groups g-->
<!--            WHERE g.MTNM != '0'-->
<!--              AND g.CREATEDAT BETWEEN TO_DATE(sysdate-7)-->
<!--              AND   TO_DATE(sysdate)-->
<!--            GROUP BY g.MTNM-->
<!--           ) thisWeek-->

<!--            LEFT OUTER JOIN-->
<!--            (-->
<!--                SELECT g.MTNM, DENSE_RANK() OVER (ORDER BY COUNT(g.MTNM) DESC) rank-->
<!--                FROM groups g-->
<!--                WHERE g.MTNM != '0'-->
<!--                  AND g.CREATEDAT BETWEEN TO_DATE(sysdate-14)-->
<!--                  AND   TO_DATE(sysdate-7)-->
<!--                GROUP BY g.MTNM-->
<!--                ) prevWeek-->

<!--                ON prevWeek.MTNM = thisWeek.MTNM-->
<!--            ORDER BY changeRank DESC-->
<!--        ]]>-->
<!--    </select>-->
    <select id="selectMountainByRank" resultType="map" parameterType="int">
        <![CDATA[
            SELECT thisWeek.MTNM, NVL(prevWeek.rank - thisWeek.rank,'-999') changeRank
            FROM (
            SELECT g.MTNM,DENSE_RANK() OVER (ORDER BY COUNT(g.MTNM) DESC) rank
            FROM groups g
            WHERE g.MTNM != '0'
              AND g.CREATEDAT BETWEEN sysdate-7
              AND  sysdate
            GROUP BY g.MTNM
           ) thisWeek

            LEFT OUTER JOIN
            (
                SELECT g.MTNM, DENSE_RANK() OVER (ORDER BY COUNT(g.MTNM) DESC) rank
                FROM groups g
                WHERE g.MTNM != '0'
                  AND g.CREATEDAT BETWEEN sysdate-14
                  AND  sysdate-7
                GROUP BY g.MTNM
                ) prevWeek

                ON prevWeek.MTNM = thisWeek.MTNM
            ORDER BY changeRank DESC
        ]]>
    </select>
    <select id="selectTrailByRank" resultType="map">
        SELECT DISTINCT rank.*, ti.MNTN_NM
        FROM
        (
            SELECT tl.MNTN_CODE, DENSE_RANK() OVER (ORDER BY COUNT(tl.LIKEYN) DESC) rank
            FROM trailLike tl
            WHERE tl.LIKEYN = 'Y'
            GROUP BY tl.MNTN_CODE
            ORDER BY rank ASC
        ) rank
        LEFT OUTER JOIN trailInfo ti ON ti.MNTN_CODE = rank.MNTN_CODE
        ORDER BY rank ASC
    </select>

    <insert id="followMountainFunction" parameterType="map">
        <if test='likeYN.equals("Y")'>
        <![CDATA[
            MERGE INTO MTLIKE
            USING DUAL
            ON (mtNum = #{mntilistno} AND userId = #{userId})
            WHEN MATCHED THEN
            UPDATE SET
                    likeYN = #{likeYN},
                    createdAT = sysdate
            WHEN NOT MATCHED THEN
                INSERT (mtNum, userId, likeYN, createdAT)
                VALUES (#{mntilistno},#{userId},#{likeYN},sysdate)
        ]]>
        </if>
        <if test='likeYN.equals("N")'>
            UPDATE mtLike
            SET mtNum = #{mntilistno},
                userId = #{userId},
                likeYn = #{likeYN},
                createdAt = sysdate
            WHERE mtNum = #{mntilistno}
              AND userId = #{userId}
        </if>
        <selectKey keyProperty="mtNum" resultType="_int" order="AFTER">
            SELECT mtNum
            FROM mtLike
            WHERE mtNum = #{mntilistno}
            AND userId = #{userId}
        </selectKey>
    </insert>
    <select id="checkMtLike" resultType="string" parameterType="map">
        <![CDATA[
            SELECT LIKEYN
            FROM MTLIKE
            WHERE mtNum = #{mntilistno}
              AND userId = #{userId}
        ]]>
    </select>
    <select id="followMountainCount" resultType="_int" parameterType="string">
        <![CDATA[
            SELECT COUNT(*)
            FROM MTLIKE
            WHERE LIKEYN = 'Y'
            AND MTNUM = #{mntilistno}
        ]]>
    </select>
    <insert id="insertTrailInfo" parameterType="map">
        INSERT INTO TRAILINFO
        VALUES (
            #{FID},
            #{PMNTN_LT},
            #{PMNTN_GODN},
            #{MNTN_CODE},
            #{MNTN_ID},
            #{PMNTN_MAIN},
            #{PMNTN_UPPL},
            #{PMNTN_RISK},
            #{PMNTN_CLS_},
            #{PMNTN_NM},
            #{PMNTN_MTRQ},
            #{PMNTN_SN},
            #{DATA_STDR_},
            #{PMNTN_DFFL},
            #{PMNTN_RECO},
            #{MNTN_NM},
            #{PMNTN_CNRL}
        )
    </insert>

    <insert id="insertTrailLocation" parameterType="map">
        INSERT INTO TRAILLOCATION
        VALUES (
            #{MNTN_CODE},
            #{FID},
            (select NVL(MAX(locationOrder),0)+1
            FROM TrailLocation
            WHERE MNTN_CODE = #{MNTN_CODE}
            AND FID = #{FID}),
            #{LOCATIONX},
            #{LOCATIONY}
        )
    </insert>

    <insert id="insertTrailSpot" parameterType="map">
        INSERT INTO TRAILSPOT
        VALUES (
            #{FID},
            #{PMNTN_SPOT},
            #{MNTN_CODE},
            #{MANAGE_SP1},
            #{MANAGE_SP2},
            #{DETAIL_SPO},
            #{ETC_MATTER},
            #{MNTN_NM},
            #{PAST_SPOT_},
            #{MNTN_ID},
            #{LOCATIONX},
            #{LOCATIONY}
        )
    </insert>

    <select id="selectTrailLocation" resultType="map" parameterType="map">
        SELECT *
        FROM trailLocation
        WHERE MNTN_CODE = #{MNTN_CODE}
          AND FID = #{FID}
        ORDER BY fid ASC, locationorder ASC
    </select>

    <select id="selectTrailInfo" resultType="map" parameterType="map">
        SELECT DISTINCT ti.FID, ti.MNTN_CODE, ti.MNTN_NM, NVL(TRIM(ti.PMNTN_NM),'구간') PMNTN_NM,
            (
            SELECT DISTINCT FIRST_VALUE(tl.LOCATIONX) over (PARTITION BY tl.FID ORDER BY tl.LOCATIONORDER ASC)
             FROM TRAILLOCATION tl
             WHERE tl.MNTN_CODE = #{MNTN_CODE}
                    AND FID = #{FID}
            ) LOCATIONX,
            (
            SELECT DISTINCT FIRST_VALUE(tl.LOCATIONY) over (PARTITION BY tl.FID ORDER BY tl.LOCATIONORDER ASC)
             FROM TRAILLOCATION tl
             WHERE tl.MNTN_CODE = #{MNTN_CODE}
                AND FID = #{FID}
            ) LOCATIONY
        FROM TrailInfo ti
        WHERE ti.MNTN_CODE = #{MNTN_CODE}
        ORDER BY FID ASC
    </select>

    <select id="selectTrailSumInfo" resultType="map" parameterType="map">
        select PMNTN_NM, TO_CHAR(DATA_STDR_,'yyyy-mm-dd') data_stdr_,
               DECODE(SUM(DECODE(PMNTN_DFFL,'쉬움',1,'보통',2,'어려움',3))/COUNT(PMNTN_DFFL),1,'쉬움',2,'보통',3,'어려움') avgDffl,
               SUM(PMNTN_LT) sumLt,
               SUM(PMNTN_UPPL) sumUp,
               SUM(PMNTN_GODN) sumDn
        FROM TRAILINFO
        WHERE MNTN_CODE = #{MNTN_CODE}
        GROUP BY PMNTN_NM, DATA_STDR_

    </select>

    <select id="selectTrailDetailInfo" resultType="map" parameterType="map">
        SELECT ti.FID, ti.PMNTN_LT, ti.PMNTN_GODN, ti.MNTN_CODE, ti.MNTN_ID, ti.PMNTN_MAIN, ti.PMNTN_UPPL, ti.PMNTN_RISK, NVL(TRIM(ti.PMNTN_NM),'구간') PMNTN_NM,
               ti.PMNTN_CLS_, PMNTN_MTRQ, PMNTN_SN, TO_CHAR(DATA_STDR_,'yyyy-mm-dd'), ti.PMNTN_DFFL, ti.PMNTN_RECO, ti.MNTN_NM, ti.PMNTN_CNRL, tl.LOCATIONX, tl.LOCATIONY
        FROM TRAILINFO ti, TRAILLOCATION tl
        WHERE ti.MNTN_CODE = tl.MNTN_CODE
          AND ti.FID = tl.FID
          AND tl.LOCATIONORDER = 1
          AND ti.MNTN_CODE = #{MNTN_CODE}
          AND ti.FID = #{FID}
    </select>

    <select id="selectTrailSpot" resultType="map" parameterType="map">
        SELECT *
        FROM trailSpot
        WHERE MNTN_CODE = #{MNTN_CODE}
    </select>

    <select id="checkTrailLike" resultType="string" parameterType="map">
        SELECT NVL(LIKEYN,'N') LIKEYN
        FROM TRAILLIKE
        WHERE MNTN_CODE = #{MNTN_CODE}
        AND USERID = #{USERID}
    </select>

    <insert id="trailLikeFunction" parameterType="map">
        <if test='likeYN.equals("Y")'>
            <![CDATA[
            MERGE INTO TRAILLIKE
            USING DUAL
            ON (MNTN_CODE = #{MNTN_CODE} AND userId = #{USERID})
            WHEN MATCHED THEN
            UPDATE SET
                    likeYN = #{likeYN},
                    createdAT = sysdate
            WHEN NOT MATCHED THEN
                INSERT (MNTN_CODE, USERID, likeYN, createdAt)
                VALUES (#{MNTN_CODE},#{USERID},#{likeYN},sysdate)
        ]]>
        </if>
        <if test='likeYN.equals("N")'>
            UPDATE TRAILLIKE
            SET MNTN_CODE = #{MNTN_CODE},
            userId = #{USERID},
            likeYn = #{likeYN},
            createdAt = sysdate
            WHERE MNTN_CODE = #{MNTN_CODE}
            AND userId = #{USERID}
        </if>
        <selectKey keyProperty="MNTN_CODE" resultType="_int" order="AFTER">
            SELECT MNTN_CODE
            FROM trailLike
            WHERE MNTN_CODE = #{MNTN_CODE}
            AND userId = #{USERID}
        </selectKey>
    </insert>

    <select id="selectAllTrailList" resultType="map" parameterType="map">
        SELECT *
        FROM (
            SELECT ROWNUM rnum, list.*
            FROM (
                    select MNTN_CODE, MNTN_NM, PMNTN_DFFL
                    from TRAILINFO
                    WHERE FID = 0
                    <if test="sort != null">
                        <if test="sort.equals('asc')">
                            ORDER BY MNTN_NM ASC
                        </if>
                        <if test="sort.equals('dffl')">
                            ORDER BY PMNTN_DFFL DESC
                        </if>
                    </if>
                    ) list
            )
        <![CDATA[
        WHERE rnum >= ((#{rowNum}-1)*10)+1
        AND rnum <= #{rowNum}*10
        ]]>
    </select>
    <select id="countAllTrail" resultType="int">
        select COUNT(*)
        from TRAILINFO
        WHERE FID = 0
    </select>
    <select id="selectTrailLikeById" resultType="map" parameterType="string">
        SELECT tl.MNTN_CODE, tl.USERID, TO_CHAR(tl.CREATEDAT,'yyyy-mm-dd') createdAt, ti.MNTN_NM
        FROM TrailLike tl, TrailInfo ti
        WHERE tl.MNTN_CODE = ti.MNTN_CODE
          AND ti.FID = 0
          AND tl.likeyn = 'Y'
          AND tl.userId = #{userId}
    </select>
    <select id="selectTrailByKeyword" resultType="map" parameterType="map">
        SELECT ROWNUM rnum, ti.*
        FROM TRAILINFO ti
        WHERE ti.FID = 0
          AND ti.MNTN_NM = #{MNTN_NM}
    </select>
</mapper>