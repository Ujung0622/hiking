<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="project.e_P002_D003">
<!-- 리절트 맵 정의 -->	
                <!-- 상품 이미지 -->
     <resultMap id="e_P002_D003PhotoVO" type="e_P002_D003PhotoVO">
	 <result property="prodNum" column="PRODNUM" />
	 <result property="pPhotoNum" column="PPHOTONUM" />
	 <result property="createDat" column="CREATEDAT" />
	 <result property="upDateDat" column="UPDATEDAT" />
     <result property="content" column="CONTENT" javaType="[B" jdbcType="BLOB"  />
	</resultMap>
	             <!-- 상품 상세내용 -->
	<resultMap id="e_P002_D003ProductsVO" type="e_P002_D003ProductsVO">
		<result property="prodNum" column="PRODNUM" />
		<result property="pCategoryNum" column="PCATEGORYNUM" />
		<result property="name" column="NAME" />
		<result property="price" column="PRICE" />
		<result property="content" column="CONTENT" />
		<result property="quantity" column="QUANTITY" />
		<result property="type" column="TYPE" />
		<result property="createDat" column="CREATEDAT" />
		<result property="updateDat" column="UPDATEDAT" />
	</resultMap>
		  <!-- 페이징 -->
	<resultMap id="Paging" type="Paging">
		<result property="start"  />
		<result property="end"  />
		<result property="nowPage"  />
		<result property="startPage"  />
		<result property="endPage"  />
		<result property="total"  />
		<result property="cntPerPage"  />
		<result property="lastPage"  />
		<result property="listType"  />
	</resultMap>
	
			  <!-- 후기 vo -->
	<resultMap id="productAfterVO" type="productAfterVO">
		<result property="userNum" column="USERNUM" />
		<result property="afterNum" column="AFTERNUM" />
		<result property="prodNum" column="PRODNUM" />
		<result property="content" column="CONTENT" />
		<result property="afterType" column="AFTERTYPE" />
		<result property="photo" column="PHOTO" javaType="[B" jdbcType="BLOB" />
		<result property="createDat" column="CREATEDAT" />
		<result property="updateDat" column="UPDATEDAT" />
		<result property="evalue" column="EVALUE" />
		<result property="lvl" column="lvl" />
	</resultMap>   

<!-- ////////////////////////////////////////////////////////////////////// -->
	<!-- 총 게시글 갯수 출력 -->
       <select id="countBoard" resultType="int">
	      SELECT COUNT(*) FROM products
       </select>
       
       
       	<!--후기 총 개수 출력 -->
       <select id="afterTotal" resultType="int" parameterType="java.util.Map">
	      SELECT COUNT(*) FROM productafter
	      where prodNum = #{prodNum}
       </select>
       
       	<!-- 총 게시글 갯수 출력 카테고리 분류형 -->
       <select id="countBoard2" resultType="int" parameterType="Paging">
	       <![CDATA[
	       SELECT COUNT(*) FROM products
	         ]]>
	       <where>
           <if test=" listType!='' and listType!=null and listType!=10">
            pcategorynum = #{listType}
           </if>
           </where>
       </select>
       
  	<!-- 상품상세 -->
       <select id="selectProductDetail" resultType="e_P002_D003ProductsVO" parameterType="java.util.Map">
	       select *
           from products
           where PRODNUM = #{prodNum}
       </select>
       
  	<!-- 상품상세페이지의 이미지들 -->
       <select id="selectProductDetailImages" resultType="e_P002_D003PhotoVO" parameterType="java.util.Map">
	        select *
            from prodphoto
           where PRODNUM = #{prodNum}
       </select>    
       
              <!-- 상품 평균점수 -->
       <select id="prodAverage" resultType="int" parameterType="java.util.Map">
             select  decode(FLOOR(AVG(evalue)),null,0,FLOOR(AVG(evalue))) 
             from productAfter
             where prodNum = #{prodNum}
       </select> 
       
          
       
              	<!--검색 조건에 대한              총 게시글 개수-->
       <select id="searchTotal" resultType="int" parameterType="java.util.Map">
	       <![CDATA[
	       SELECT COUNT(*) FROM products
	         ]]>
    		 <choose>
    		  <when test="searchtype=='NAME'">
                where name LIKE '%'||#{searchContent}||'%'
              </when>
                 <when test="searchtype=='CONTENT'">
                where content LIKE '%'||#{searchContent}||'%'
              </when>
          </choose>
       </select>


    <!-- 페이징 처리 후 게시글 조회                         메인화면-->
          <select id="selectProduct" resultType="e_P002_D003ProductsVO" parameterType="Paging">
            <![CDATA[
	          SELECT PRODNUM, PCATEGORYNUM,NAME,PRICE,CONTENT,QUANTITY,TYPE,CREATEDAT,UPDATEDAT
		       FROM (
			       SELECT ROWNUM RN, A.* 
				     FROM (
						SELECT * 
						FROM products 
						ORDER BY prodNum ASC 
						) A
				    )
          where RN BETWEEN #{start} AND #{end} 
	            ]]>
       </select>
       
           <!-- 상품 후기 조회                        상품 상세페이지-->
          <select id="afterList" resultType="productAfterVO" parameterType="java.util.Map">
            <![CDATA[
                SELECT lvl,USERNUM,AFTERNUM,prodNum,content,aftertype,createDat,evalue                
                  FROM(                             
                     SELECT ROWNUM AS recnum,
                     lvl,                          
                      USERNUM,
                      AFTERNUM,
                        prodNum,
                        content,
                      aftertype,      
                      createDat,
                        evalue,
                        photo
                         FROM(                              
                             SELECT LEVEL AS lvl,
                         USERNUM,
                        AFTERNUM, 
                         prodNum,
                           content,
                          aftertype,      
                          createDat,
                            evalue,
                              photo
                               FROM productafter
                                 where prodNum= #{prodNum}
                                 START WITH aftertype is null
                                 CONNECT BY PRIOR AFTERNUM=aftertype
                                 ORDER SIBLINGS BY AFTERNUM desc
                               ))
                        WHERE recnum BETWEEN #{start} AND #{end}
	            ]]>
       </select>
       
       
       <!-- 페이징 처리 후 게시글 조회                      카테고리별 화면 -->
       <select id="selectProductCate" resultType="e_P002_D003ProductsVO" parameterType="java.util.Map">
         <![CDATA[
	          SELECT PRODNUM, PCATEGORYNUM,NAME,PRICE,CONTENT,QUANTITY,TYPE,CREATEDAT,UPDATEDAT
		       FROM (
			       SELECT ROWNUM RN, A.* 
				     FROM (
						SELECT * 
						FROM products 
						ORDER BY prodNum ASC 
						) A
				    )
           ]]>
           <where>
           RN BETWEEN #{start} AND #{end}
           <if test="listType!=10">
          AND pcategorynum = #{listType}
           </if>
           </where>
       </select>
       
       
       
        <!-- 페이징 처리 후 게시글 조회                     검색 결과          -->
       <select id="searchResult" resultType="e_P002_D003ProductsVO" parameterType="java.util.Map">
         <![CDATA[
	          SELECT PRODNUM, PCATEGORYNUM,NAME,PRICE,CONTENT,QUANTITY,TYPE,CREATEDAT,UPDATEDAT
		       FROM (
			       SELECT ROWNUM RN, A.* 
				     FROM (
						SELECT * 
						FROM products 
						ORDER BY prodNum ASC 
						) A
				    )
           ]]>
           <choose>
    		  <when test="searchtype=='name'">
    		    where RN BETWEEN #{start} AND #{end}
                and name LIKE '%'||#{searchContent}||'%'
              </when>
                 <when test="searchtype=='content'">
                 where RN BETWEEN #{start} AND #{end}
                and content LIKE '%'||#{searchContent}||'%'
              </when>
          </choose>
       </select>
       
           
       
    <!-- 페이징 처리 후 게시글 이미지 조회        사용안함 -->   
         <select id="shopMainImage" resultMap="e_P002_D003PhotoVO" parameterType="Paging">
        <![CDATA[
            SELECT * 
		       FROM (
			       SELECT  A.* 
				     FROM (
						SELECT * 
						FROM prodphoto
						where  pphotoNum=1
						ORDER BY prodNum ASC 
						) A
				    )
	         WHERE prodNum BETWEEN #{start} AND #{end} 
        ]]>
        </select>



	      <!-- 상품등록 -->
   <insert id="saveImage"  parameterType="java.util.Map">
   		<selectKey resultType="int" keyProperty="prodNum" order="BEFORE">
	    	select prodnum
            from products
            where CREATEDAT in (
               select max(CREATEDAT)
               from products
                  )
	    </selectKey>
    <foreach item="item"  collection="list"   open="INSERT ALL" 
                  separator=" " close="SELECT * FROM DUAL" >
      INTO prodphoto(PRODNUM,PPHOTONUM,CONTENT,CREATEDAT)
      VALUES (#{prodNum}, #{item.pPhotoNum}, #{item.content}, sysdate)
    </foreach>
  </insert>
   
                <!-- 글목록 이미지 하나 -->  
        <select id="getByteImage" resultMap="e_P002_D003PhotoVO" parameterType="e_P002_D003PhotoVO">
        <![CDATA[
            SELECT content
            FROM prodphoto
            WHERE pphotoNum = 1 and prodNum = #{prodNum}
            ORDER BY prodNum
        ]]>
        </select>
        
                        <!-- 상품상세 이미지 하나 -->  
        <select id="detailImage" resultMap="productAfterVO" parameterType="productAfterVO">
        <![CDATA[
            SELECT photo
            FROM productafter
            WHERE afterNum = #{afterNum}
        ]]>
        </select>
        
          
     <select id="shopMainText" resultMap="e_P002_D003ProductsVO" parameterType="e_P002_D003ProductsVO">
        <![CDATA[
           select p.prodNum,p.name,p.price,p.content
          from products p inner join prodphoto i on p.prodnum =i.prodnum
          where i.pphotonum=1
          order by p.prodNum
        ]]>
        </select>


	          <!-- 상품 상세내용 등록 -->
	 <insert id="addProduct" parameterType="java.util.Map"   >
		<selectKey resultType="String" keyProperty="prodNum" order="BEFORE">
	    	select seq_prod_prodNum.nextval from dual
	    </selectKey>
	    <![CDATA[
		   insert into products(
		                prodNum, 
		                pCategoryNum,
                    name,
                    price,
                    content,
					Quantity,
					type,
					createdAt
				    )
					  			values(
					  			      #{prodNum},
					  			      #{pCategoryNum},
					  			      #{name},
					  			      #{price},
					  			      #{content},
					  			      #{quantity},
					  			      #{type},
					  			      sysdate)
		]]>
	</insert> 
	
	          <!-- 상품 후기 After 등록 -->
	 <insert id="addAfter" parameterType="java.util.Map"   >
		<selectKey resultType="int" keyProperty="afterNum" order="BEFORE">
	    	select seq_after.nextval from dual
	    </selectKey>
	    <![CDATA[
		   insert into productafter (
		                 userNum,
		                afterNum, 
		                prodNum,
                    content,
                    photo,
					createDat,
					evalue
				    )
					  			values(
					  			       #{afterNum},
					  			      #{afterNum},
					  			      #{prodNum},
					  			      #{content},
					  			      #{photo},
					  			      sysdate,
					  			      #{evalue})
		]]>
	</insert> 
	
	      <!-- 상품 댓글 -->
	<insert id="addComent" parameterType="java.util.Map"   >
		<selectKey resultType="int" keyProperty="afterNum" order="BEFORE">
	    	select seq_after.nextval from dual
	    </selectKey>
	    <![CDATA[
		   insert into productafter (
		                 afterType,
		                 userNum,
		                afterNum, 
		                prodNum,
                    content,
					createDat
				    )
					  			values(
					  			     #{afterType},
					  			      #{afterNum},
					  			      #{afterNum},
					  			      #{prodNum},
					  			      #{content},
					  			      sysdate
					  			      )
		]]>
	</insert> 
	
	
	<!--
		<insert id="insertGoodsImageFile" parameterType="imageFileVO"   >
		<selectKey resultType="int" keyProperty="image_id" order="BEFORE">
	    	select seq_image_id.nextval from dual
	    </selectKey>
	    <![CDATA[
		   insert into t_goods_detail_image (image_id,
		                                     goods_id,
																				 fileName,
																				 fileType,
																				 reg_id)
											   					values(#{image_id},
											   					 			 #{goods_id},
											   							 	 #{fileName},
											   								 #{fileType},
											   								 #{reg_id} )
		]]>
	</insert> 
	<select id="selectNewGoodsList" resultMap="goodsResult"   parameterType="java.util.Map"  >
	    <![CDATA[
		  select * from (
			   select rowNum as recNum,
			   		  goods_id,
			          goods_title,
			          goods_writer,
			          goods_publisher,
			          goods_sales_price,
			          to_char(goods_creDate,'YYYY-MM-DD')  as goods_creDate,
			          to_char(goods_published_date,'YYYY-MM-DD') as goods_published_date
			       from (
			             select  goods_id,
			             		 goods_title,
			             		 goods_writer,
			             		 goods_publisher,
			             		 goods_sales_price,
			             		 goods_creDate,
			             		 goods_published_date
			              from t_shopping_goods 
			                where  to_char(goods_creDate,'YYYY-MM-DD')  between #{beginDate} and #{endDate}
			               order by goods_creDate desc
					    )
				)							
			where				
		recNum between (#{section}-1)*100+ (#{pageNum}-1)*10+1 and (#{section}-1)*100+(#{pageNum})*10				        
    	]]>
	</select> -->
	<!-- 
	<select id="selectOrderGoodsList" resultMap="orderGoodsResult"   parameterType="java.util.Map"  >
		  select * from (
			    select rowNum as recNum,t.*
			       from (
			              select  *  from t_shopping_order 
			              where to_char(pay_order_time,'yyyy-mm-dd')  between #{beginDate} and #{endDate}
			                <if test="search_type=='orderer_id'">
			                  AND orderer_id=#{search_word}
			                </if>
			                <if test="search_type=='orderer_name'">
			                  AND orderer_name=#{search_word}
			                </if>
			                <if test="search_type=='orderer_hp_num'">
			                   AND pay_orderer_hp_num=#{search_word} 
			                </if>
			              order by PAY_ORDER_TIME desc
					    ) t
				)							
			where				
		recNum between (#{section}-1)*100+ (#{pageNum}-1)*10+1 and (#{section}-1)*100+(#{pageNum})*10				        
	</select>
	
 

	
	<select id="selectGoodsDetail" resultMap="goodsResult"   parameterType="String"  >
	    <![CDATA[
		     select g.*,to_char(g.goods_published_date,'YYYY-MM-DD') as goods_published_date, d.fileName from t_shopping_goods g, t_goods_detail_image d
	        where g.goods_id=d.goods_id
	        and d.filetype='main_image'
	        and g.goods_id=#{goods_id}
	        order by g.goods_id
    	]]>
	</select>
	<select id="selectGoodsImageFileList" resultMap="imageResult"   parameterType="String"  >
	    <![CDATA[
		    	select * from  t_goods_detail_image 
		    	where  
			    goods_id=#{goods_id}
			    order by image_id asc
    	]]>
	</select>	
	
	
<update id="updateGoodsInfo" parameterType="java.util.HashMap" >
	   update t_shopping_goods
	    <set> 
	      <if test=" goods_sort!='' and goods_sort!=null">
	        goods_sort=#{goods_sort},
	      </if>
	      <if test=" goods_title!='' and goods_title!=null">
	        goods_title=#{goods_title},
	      </if>
	      <if test=" goods_writer!='' and goods_writer!=null">
	        goods_writer=#{goods_writer},
	      </if>
	      <if test=" goods_publisher!='' and goods_publisher!=null">
	        goods_publisher=#{goods_publisher},
	      </if>
	      <if test=" goods_price!='' and goods_price!=null">
	        goods_price=#{goods_price},
	      </if>
	      <if test=" goods_published_date!='' and goods_published_date!=null">
	        goods_published_date=#{goods_published_date},
	      </if>
	      <if test=" goods_sales_price!='' and goods_sales_price!=null">
	        goods_sales_price=#{goods_sales_price},
	      </if>
	      <if test=" goods_point!='' and goods_point!=null">
	        goods_point=#{goods_point},
	      </if>
	      <if test=" goods_page_total!='' and goods_page_total!=null">
	        goods_page_total=#{goods_page_total},
	      </if>
	      <if test=" goods_isbn!='' and goods_isbn!=null">
	        goods_isbn=#{goods_isbn},
	      </if>
	      <if test=" goods_delivery_price!='' and goods_delivery_price!=null">
	        goods_delivery_price=#{goods_delivery_price},
	      </if>
	      <if test=" goods_delivery_date!='' and goods_delivery_date!=null">
	        goods_delivery_date=#{goods_delivery_date},
	      </if>
	      <if test=" goods_status!='' and goods_status!=null">
	        goods_status=#{goods_status},
	      </if>
	      <if test=" goods_writer_intro!='' and goods_writer_intro!=null">
	        goods_writer_intro=#{goods_writer_intro},
	      </if>
	      <if test=" goods_intro!='' and goods_intro!=null">
	        goods_intro=#{goods_intro},
	      </if>
	      <if test=" publisher_comment!='' and publisher_comment!=null">
	        publisher_comment=#{publisher_comment},
	      </if>
	      <if test=" recommendation!='' and recommendation!=null">
	        recommendation=#{recommendation},
	      </if>
	      <if test=" goods_contents_order!='' and goods_contents_order!=null">
	        goods_contents_order=#{goods_contents_order:VARCHAR}
	      </if>
	     </set>
	    where 
	    goods_id=#{goods_id}
	
	</update>	
	<update id="updateGoodsImage" parameterType="imageFileVO">
		update t_goods_detail_image
		set fileName=#{fileName}
		where	 
		goods_id=#{goods_id} and image_id=#{image_id}
	</update>
	
	<delete id="deleteGoodsImage" parameterType="String">
	  delete from t_goods_detail_image
	  where image_id=#{image_id}
	</delete>
	
<update id="updateOrderGoods" parameterType="java.util.HashMap" >
	   update t_shopping_order
	    <set> 
	      <if test=" delivery_state!='' and delivery_state!=null">
	        delivery_state=#{delivery_state},
	      </if>
	      <if test=" delivery_address!='' and delivery_address!=null">
	        delivery_address=#{delivery_address},
	      </if>
	    </set>
	    where 
	    order_id=#{order_id}
	
	</update> -->		
</mapper>