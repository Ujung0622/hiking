<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="project.e_P002_D003">
<!-- 리절트 맵 정의 -->	
                <!-- 상품 이미지 -->
     <resultMap id="e_P002_D003PhotoVO" type="e_P002_D003PhotoVO">
	 <result property="prodNum" column="PRODNUM" />
	 <result property="pPhotoNum" column="PPHOTONUM" />
	 <result property="createDat" column="CREATEDAT" />
	 <result property="upDateDat" column="UPDATEDAT" />
     <result property="content" column="CONTENT"  />
     <result property="contentDetail" column="CONTENTDETAIL"  />
     <result property="originalFileName" column="ORIGINALFILENAME" />
     <result property="fileSize" column="FILESIZE" />
	</resultMap>
	
	 <resultMap id="OptionVO" type="OptionVO">
	 <result property="optionNum" column="OPTIONNUM" />
	 <result property="prodNum" column="PRODNUM" />
	 <result property="prodSize" column="PRODSIZE" />
	 <result property="color" column="COLOR" />
     <result property="quantity" column="QUANTITY"  />
     <result property="prodstatus" column="PRODSTATUS"  />
     <result property="updateDate" column="UPDATEDATE" />
     <result property="modDate" column="MODDATE" />
	</resultMap>
	             <!-- 상품 상세내용 -->
	<resultMap id="e_P002_D003ProductsVO" type="e_P002_D003ProductsVO">
		<result property="prodNum" column="PRODNUM" />
		<result property="pCategoryNum" column="PCATEGORYNUM" />
		<result property="name" column="NAME" />
		<result property="price" column="PRICE" />
		<result property="content" column="CONTENT"  />
		<result property="type" column="TYPE" />
		<result property="createDat" column="CREATEDAT" />
		<result property="updateDat" column="UPDATEDAT" />
	</resultMap>
		
		 <!-- 후기 vo -->
	<resultMap id="productAfterVO" type="productAfterVO">
		<result property="userNum" column="USERNUM" />
		<result property="afterNum" column="AFTERNUM" />
		<result property="prodNum" column="PRODNUM" />
		<result property="content" column="CONTENT" />
		<result property="afterType" column="AFTERTYPE" />
		<result property="photo" column="PHOTO" />
		<result property="photoName" column="PHOTONAME"/>
		<result property="createDat" column="CREATEDAT" />
		<result property="updateDat" column="UPDATEDAT" />
		<result property="evalue" column="EVALUE" />
		<result property="lvl" column="lvl" />
	</resultMap>   
	
	     <!-- 배송지 -->
	  <resultMap type="deliveryVO" id="deliveryVO">
	     <result property="userNum" column="USERNUM" />
	     <result property="deliNum" column="DELINUM" />
	     <result property="address" column="ADDRESS" />
	     <result property="address2" column="ADDRESS2" />
	     <result property="zonecode" column="ZONECODE" />
	     <result property="createDat" column="CREATEDAT" />
	     <result property="updateDat" column="UPDATEDAT" />
	     <result property="deliBasic" column="DELIBASIC" />
	     <result property="custName" column="CUSTNAME" />
	     <result property="custPhonNum" column="CUSTPHONNUM" />
	  </resultMap>
	  
	       <!-- 유저 -->
	  <resultMap id="userVO" type="userVO">
		<result property="userNum" column="userNum" />
		<result property="id" column="id" />
		<result property="password" column="password" />
		<result property="name" column="name" />
		<result property="sex" column="sex" />
		<result property="phone" column="phone" />
		<result property="address" column="address" />
		<result property="address2" column="address2" />
		<result property="zonecode" column="zonecode" />
		<result property="email" column="email" />
		<result property="type" column="type" />
		<result property="status" column="status" />
		<result property="createdAt" column="createdAt" />
		<result property="updatedAt" column="updatedAt" />
		<result property="sex2" column="sex2" />
		<result property="sessionId" column="sessionId" />
		<result property="sessionLimit" column="sessionLimit" />
		<result property="profile" column="profile" />
		<result property="content" column="content" />
	</resultMap>
	  
	  
	    <!-- 포인트 -->
       <resultMap type="pointVO" id="pointVO">
	     <result property="userNum" column="USERNUM" />
	     <result property="startDate" column="STARTDATE" />
	     <result property="endDate" column="ENDDATE" />
	     <result property="type" column="TYPE" />
	     <result property="used" column="USED" />
	     <result property="result" column="RESULT" />
	     <result property="orderNum" column="ORDERNUM" />
	     <result property="createDat" column="CREATEDAT" />
	     <result property="updateDat" column="UPDATEDAT" />
	     <result property="payType" column="PAYTYPE" />
	  </resultMap>
	  
		      <!-- 지불 vo -->
	  <resultMap type="paymentVO" id="paymentVO">
	     <result property="orderNum" column="ORDERNUM" />
	     <result property="type" column="TYPE" />
	     <result property="createDat" column="CREATEDAT" />
	     <result property="updateDat" column="UPDATEDAT" />
	     <result property="buyerName" column="BUYERNAME" />
	     <result property="merchant_uid" column="MERCHANT_UID" />
	     <result property="imp_uid" column="IMP_UID" />
	     <result property="apply_num" column="APPLY_NUM" />
	  </resultMap>
	  
	  
	  <!--orders 장바구니 -->
	  <resultMap type="OrdersVO" id="OrdersVO">
	     <result property="orderNum" column="ORDERNUM" />
	     <result property="userNum" column="USERNUM" />
	     <result property="ordereDat" column="ORDEREDAT" />
	     <result property="price" column="PRICE" />
	     <result property="charge" column="CHARGE" />
	     <result property="orderStatus" column="ORDERSTATUS" />
	     <result property="deliveryStatus" column="DELIVERYSTATUS" />
	     <result property="orderType" column="ORDERTYPE" />
	     <result property="prodNum" column="PRODNUM" />
	     <result property="quantity" column="QUANTITY" />
	     <result property="prodName" column="PRODNAME" />
	     <result property="payTotal" column="PAYTOTAL" />
	  </resultMap>
	  
		  <!-- 페이징 -->
	<resultMap id="Paging" type="Paging">
		<result property="start"  />
		<result property="end"  />
		<result property="nowPage"  />
		<result property="startPage"  />
		<result property="endPage"  />
		<result property="total"  />
		<result property="cntPerPage"  />
		<result property="lastPage"  />
		<result property="listType"  />
	</resultMap>
	

<!-- ////////////////////////////////////////////////////////////////////// -->
	<!-- 총 게시글 갯수 출력 -->
       <select id="countBoard" resultType="int">
	      SELECT COUNT(*) FROM products
       </select>
       
       
       	<!--후기 총 개수 출력 -->
       <select id="afterTotal" resultType="int" parameterType="java.util.Map">
	      SELECT COUNT(*) FROM productafter
	      where prodNum = #{prodNum}
       </select>
       
       	<!-- 총 게시글 갯수 출력 카테고리 분류형 -->
       <select id="countBoard2" resultType="int" parameterType="java.util.Map">
	       <![CDATA[
	       SELECT COUNT(*) FROM products
	         ]]>
	       <where>
           <if test=" listType!='' and listType!=null and listType!=100">
            PRODCATEGORYNUM = #{listType}
           </if>
           </where>
       </select>
       
  	<!-- 상품상세 -->
       <select id="selectProductDetail" resultType="map" parameterType="java.util.Map">
	       select *
           from products p, prodoption op
           where p.prodnum=op.prodnum
           and p.PRODNUM = #{prodNum}
       </select>
       
  	<!-- 상품상세페이지의 이미지들 -->
       <select id="selectProductDetailImages" resultType="map" parameterType="java.util.Map">
           select *
            from prodphoto
           where PRODNUM = #{prodNum}
           and content is not null
       </select>
        
        <select id="selectProductDetailImagesBottom" resultType="map" parameterType="java.util.Map">
           select *
            from prodphoto
           where PRODNUM = #{prodNum}
           and contentdetail is not null
       </select>    
       
     <!-- 구매 성공 후 수량 빼기 -->   
    <!-- <update id="updateQuantity"  parameterType="java.util.Map">
     <![CDATA[
	     update products
	     set quantity = quantity- #{quantity}
	     where prodNum = #{prodNum}
      ]]>      
   </update> -->
   
   	    <!-- 구매 성공 후 수량 빼기 -->
	   <update id="updateQuantity"  parameterType="java.util.List">
        <foreach  item="item" collection="list"  index="index" 
      separator=";" open="DECLARE BEGIN" close="; END;" >
           UPDATE products 
           SET quantity = quantity -#{item.quantity}
           WHERE prodNum= #{item.prodNum}
      </foreach>
       </update>
   
   
   
         <!-- 구매 성공 후 포인트 차감 -->
       <update id="updatePoint"  parameterType="java.util.Map">
     <![CDATA[
	     update point
	     set result = result- #{point}
	     where userNum = #{userNum}
      ]]>      
   </update>  
       
              <!-- 상품 평균점수 -->
       <select id="prodAverage" resultType="int" parameterType="java.util.Map">
             select  decode(FLOOR(AVG(evalue)),null,0,FLOOR(AVG(evalue))) 
             from productAfter
             where prodNum = #{prodNum}
       </select> 
       
                     <!-- 포인트-->
       <select id="getPoint" resultType="int" parameterType="java.util.Map">
             select  decode(RESULT,null,0,RESULT)
             from POINT
             where USERNUM = #{userNum}
       </select> 
       
                   <!-- 수량확인-->
       <select id="checkQuantity" resultType="int" parameterType="java.util.Map">
             select  quantity
             from PRODOPTION
             where prodnum= #{prodNum}
       </select> 
       
                    <!-- 배송지-->
       <select id="getAddress" resultType="userVO" parameterType="java.util.Map">
             select   *
             from users 
             where USERNUM = #{userNum}
       </select> 
       
                         <!-- 전체검색 카운트 (검색)-->
       <select id="searchAllTotal" resultType="int" parameterType="java.util.Map">
          select Count(*)
          from products
          <choose>
            <when test="searchContent != 'null' and searchType=='name'">
             where name like '%'||#{searchContent}||'%'
            </when>
           <when test="searchContent != 'null' and searchType=='content'">
             where content like '%'||#{searchContent}||'%'
            </when>
          </choose>       
       </select> 
       
                                <!-- 전체검색 결과 (검색)-->
       <select id="searchAllResult" resultType="map" parameterType="java.util.Map">
        SELECT * 
		FROM (
			SELECT ROWNUM RN, A.* 
				FROM (
						SELECT * 
						FROM products 
						ORDER BY SEQ DESC 
						) A
				)
	WHERE RN BETWEEN #{start} AND #{end}
          <choose>
            <when test="searchContent != 'null' and searchType=='name'">
             and name like '%'||#{searchContent}||'%'
            </when>
           <when test="searchContent != 'null' and searchType=='content'">
             and content like '%'||#{searchContent}||'%'
            </when>
          </choose>       
       </select> 
       
       
              	<!--검색 조건에 대한   파람정보  {search=clime, searchContent =''}         총 게시글 개수-->  
       <select id="searchTotal" resultType="int" parameterType="java.util.Map">
	       <![CDATA[
	      select count(DISTINCT(b.prodnum))
             from (select *
                   from prodcategory
                  start with PARENTCATEGORYNUM is null
                  connect by prior PRODCATEGORYNUM=PARENTCATEGORYNUM
              )a ,products b 
	          where a.PRODCATEGORYNUM=b.PRODCATEGORYNUM
	         ]]>
    		 <choose>
    		  <when test="search==10 and searchContent != null and searchType=='name'  ">
                and b.name like '%'||#{searchContent}||'%'
              </when>
              <when test="search==10 and searchContent != null and searchType=='content'  ">
                and b.content like '%'||#{searchContent}||'%'
              </when>
             <when test="search==1 and searchContent != null and searchType=='name'  ">
             and a.PARENTCATEGORYNUM =1
             and b.name like '%'||#{searchContent}||'%'
              </when>
                <when test="search==2 and searchContent != null and searchType=='name'  ">
                and a.PARENTCATEGORYNUM =2
                and b.name like '%'||#{searchContent}||'%'
              </when>
               <when test="search==3 and searchContent != null and searchType=='name'  ">
               and a.PARENTCATEGORYNUM =3
                and b.name like '%'||#{searchContent}||'%'
              </when>
              
               <when test="search==1 and searchContent != null and searchType=='content'  ">
             and a.PARENTCATEGORYNUM =1
             and b.content like '%'||#{searchContent}||'%'
              </when>
                <when test="search==2 and searchContent != null and searchType=='content'  ">
                and a.PARENTCATEGORYNUM =2
                and b.content like '%'||#{searchContent}||'%'
              </when>
               <when test="search==3 and searchContent != null and searchType=='content'  ">
               and a.PARENTCATEGORYNUM =3
                and b.content like '%'||#{searchContent}||'%'
              </when>
            </choose>
       </select>




    <!-- 페이징 처리 후 게시글 조회                         메인화면-->
          <select id="selectProduct" resultType="e_P002_D003ProductsVO" parameterType="Paging">
            <![CDATA[
	          SELECT PRODNUM, PCATEGORYNUM,NAME,PRICE,CONTENT,QUANTITY,TYPE,CREATEDAT,UPDATEDAT
		       FROM (
			       SELECT ROWNUM RN, A.* 
				     FROM (
						SELECT * 
						FROM products 
						ORDER BY prodNum desc 
						) A
				    )
          where RN BETWEEN #{start} AND #{end} 
	            ]]>
       </select>
       
           <!-- 상품 후기 조회                        상품 상세페이지-->
          <select id="afterList" resultType="productAfterVO" parameterType="java.util.Map">
            <![CDATA[
                SELECT lvl,USERNUM,AFTERNUM,prodNum,content,aftertype,createDat,evalue,photo,photoName                
                  FROM(                             
                     SELECT ROWNUM AS recnum,
                     lvl,                          
                      USERNUM,
                      AFTERNUM,
                        prodNum,
                        content,
                      aftertype,      
                      createDat,
                        evalue,
                        photo,
                        photoName
                         FROM(                              
                             SELECT LEVEL AS lvl,
                         USERNUM,
                        AFTERNUM, 
                         prodNum,
                           content,
                          aftertype,      
                          createDat,
                            evalue,
                              photo,
                              photoName
                               FROM productafter
                                 where prodNum= #{prodNum}
                                 START WITH aftertype is null
                                 CONNECT BY PRIOR AFTERNUM=aftertype
                                 ORDER SIBLINGS BY AFTERNUM desc
                               ))
                        WHERE recnum BETWEEN #{start} AND #{end}
	            ]]>
       </select>
       
       
       <!-- 페이징 처리 후 게시글 조회                메인      카테고리별 화면 -->
       <select id="selectProductCate" resultType="map" parameterType="java.util.Map">
         <![CDATA[
          SELECT *
		       FROM (
			       SELECT ROWNUM RN, A.* 
				     FROM (
					SELECT p.PRODNUM, p.PRODCATEGORYNUM,p.NAME,p.PRICE,p.CONTENT ,p.TYPE,p.CREATEDAT,p.UPDATEDAT,io.content as image
						FROM products p,prodPhoto io
                        where p.prodnum=io.prodnum
                        and io.pphotonum=1
						ORDER BY p.prodNum desc
						) A
				     )
           ]]>
           <where>
           RN BETWEEN #{start} AND #{end}
           <if test="listType!=100">
          AND PRODCATEGORYNUM = #{listType}
           </if>
           </where>
       </select>
       
       
         <!-- 최신글 5개 -->
       <select id="lastItems" resultType="map">
         SELECT *
		       FROM (
			       SELECT ROWNUM RN, A.* 
				     FROM (
		   SELECT p.PRODNUM, p.PRODCATEGORYNUM,p.NAME,p.PRICE,p.CONTENT ,p.TYPE,p.CREATEDAT,p.UPDATEDAT,io.content as image
						FROM products p,prodPhoto io
                        where p.prodnum=io.prodnum
                        and io.pphotonum=1
						ORDER BY p.createdat desc
						) A
				     )
           where RN BETWEEN 1 AND 8
       </select>
       
               <!-- 즉시구매 페이지 상품 정보 -->
        <select id="selectProductInfo" resultType="map" parameterType="java.util.Map">
         <![CDATA[
                         SELECT p.PRODNUM, p.PCATEGORYNUM,p.NAME,p.PRICE,p.QUANTITY
                        ,p.TYPE,p.CREATEDAT,p.UPDATEDAT,io.content as image  
						FROM products p,prodPhoto io
                        where p.prodnum=io.prodnum
                        and io.pphotonum=1
                        and p.prodnum= #{prodNum}
           ]]>
       </select>
       
       
       
        <!-- 페이징 처리 후 게시글 조회                     검색 결과          -->
       <select id="searchResult" resultType="map" parameterType="java.util.Map">
         <![CDATA[
       SELECT *
		       FROM (
			       SELECT ROWNUM RN, A.* 
				     FROM (
					   SELECT p.PRODNUM, p.PRODCATEGORYNUM,p.NAME,p.PRICE,p.CONTENT,a.PARENTCATEGORYNUM
                        ,p.TYPE,p.CREATEDAT,p.UPDATEDAT,io.content as image  
						FROM (select *
                               from prodcategory

           ]]>
          <choose>
            <when test="search ==10 and searchType=='content' and searchContent != null">
                    start with PARENTCATEGORYNUM is null
                               connect by prior PRODCATEGORYNUM=PARENTCATEGORYNUM
                               )a, products p,prodPhoto io
                        where p.prodnum=io.prodnum
                        and a.PRODCATEGORYNUM =p.PRODCATEGORYNUM
                        and io.pphotonum=1
						ORDER BY p.CREATEDAT asc
						) A
				     )
           where rn between #{start} and #{end}
            and content like  '%'||#{searchContent}||'%'
            </when>
            
                     <when test="search ==10 and searchType=='name' and searchContent != null">
                    start with PARENTCATEGORYNUM is null
                               connect by prior PRODCATEGORYNUM=PARENTCATEGORYNUM
                               )a, products p,prodPhoto io
                        where p.prodnum=io.prodnum
                        and a.PRODCATEGORYNUM =p.PRODCATEGORYNUM
                        and io.pphotonum=1
						ORDER BY p.CREATEDAT asc
						) A
				     )
           where rn between #{start} and #{end}
            and name like  '%'||#{searchContent}||'%'
            </when>
            
            <when test="search ==1 and searchType=='content' and searchContent != null">
                    start with PARENTCATEGORYNUM = #{search}
                               connect by prior PRODCATEGORYNUM=PARENTCATEGORYNUM
                               )a, products p,prodPhoto io
                        where p.prodnum=io.prodnum
                        and a.PRODCATEGORYNUM =p.PRODCATEGORYNUM
                        and io.pphotonum=1
						ORDER BY p.CREATEDAT asc
						) A
				     )
           where rn between #{start} and #{end}
            and content like  '%'||#{searchContent}||'%'
            </when>
            
                       <when test="search ==2 and searchType=='content' and searchContent != null">
                    start with PARENTCATEGORYNUM = #{search}
                               connect by prior PRODCATEGORYNUM=PARENTCATEGORYNUM
                               )a, products p,prodPhoto io
                        where p.prodnum=io.prodnum
                        and a.PRODCATEGORYNUM =p.PRODCATEGORYNUM
                        and io.pphotonum=1
						ORDER BY p.CREATEDAT asc
						) A
				     )
           where rn between #{start} and #{end}
            and content like  '%'||#{searchContent}||'%'
            </when>
            
                       <when test="search ==3 and searchType=='content' and searchContent != null">
                    start with PARENTCATEGORYNUM = #{search}
                               connect by prior PRODCATEGORYNUM=PARENTCATEGORYNUM
                               )a, products p,prodPhoto io
                        where p.prodnum=io.prodnum
                        and a.PRODCATEGORYNUM =p.PRODCATEGORYNUM
                        and io.pphotonum=1
						ORDER BY p.CREATEDAT asc
						) A
				     )
           where rn between #{start} and #{end}
            and content like  '%'||#{searchContent}||'%'
            </when>
            
                        
                       <when test="search ==3 and searchType=='name' and searchContent != null">
                    start with PARENTCATEGORYNUM = #{search}
                               connect by prior PRODCATEGORYNUM=PARENTCATEGORYNUM
                               )a, products p,prodPhoto io
                        where p.prodnum=io.prodnum
                        and a.PRODCATEGORYNUM =p.PRODCATEGORYNUM
                        and io.pphotonum=1
						ORDER BY p.CREATEDAT asc
						) A
				     )
           where rn between #{start} and #{end}
            and name like  '%'||#{searchContent}||'%'
            </when>
            
             <when test="search ==2 and searchType=='name' and searchContent != null">
                    start with PARENTCATEGORYNUM = #{search}
                               connect by prior PRODCATEGORYNUM=PARENTCATEGORYNUM
                               )a, products p,prodPhoto io
                        where p.prodnum=io.prodnum
                        and a.PRODCATEGORYNUM =p.PRODCATEGORYNUM
                        and io.pphotonum=1
						ORDER BY p.CREATEDAT asc
						) A
				     )
           where rn between #{start} and #{end}
            and name like  '%'||#{searchContent}||'%'
            </when>
            
             <when test="search ==1 and searchType=='name' and searchContent != null">
                    start with PARENTCATEGORYNUM = #{search}
                               connect by prior PRODCATEGORYNUM=PARENTCATEGORYNUM
                               )a, products p,prodPhoto io
                        where p.prodnum=io.prodnum
                        and a.PRODCATEGORYNUM =p.PRODCATEGORYNUM
                        and io.pphotonum=1
						ORDER BY p.CREATEDAT asc
						) A
				     )
           where rn between #{start} and #{end}
            and name like  '%'||#{searchContent}||'%'
            </when>
          </choose>         
       </select>
       
       
    <!-- 페이징 처리 후 게시글 이미지 조회       -->   
         <select id="shopMainImage" resultMap="e_P002_D003PhotoVO" parameterType="java.util.Map">
            <![CDATA[
	          SELECT content
		       FROM (
			       SELECT ROWNUM RN, A.* 
				     FROM (
						SELECT * 
						FROM prodphoto 
						ORDER BY prodNum desc 
						) A
				    )
           ]]>
           <where>
           RN BETWEEN #{start} AND #{end}
           <if test="listType!=10">
          AND pcategorynum = #{listType}
           </if>
           </where>
        </select>
        
        
            <!-- 장바구니 페이징 -->   
         <select id="UserCartList" resultType="map" parameterType="java.util.Map">
        <![CDATA[
      SELECT *
		FROM (
			SELECT ROWNUM RN, A.* 
				FROM (
				        SELECT o.ORDERNUM,o.USERNUM,o.ORDEREDAT,o.PRICE,o.CHARGE,o.ORDERSTATUS,
                        o.DELIVERYSTATUS,o.ORDERTYPE,o.PRODNUM,o.QUANTITY,o.PRODNAME,io.content as image
						FROM orders o,prodPhoto io, products p
                        where o.prodnum= io.prodnum
                        and io.prodnum=p.prodnum
                        and o.userNum = #{userNum}
                        and o.ordertype=2
                        and io.pphotonum=1
						ORDER BY o.prodNum desc       
						) A
				)
	  WHERE RN BETWEEN #{start} AND #{end}
        ]]>
        </select>
        
               	<!--장바구니 총개수 -->
       <select id="CartCount" resultType="int" parameterType="java.util.Map">
        <![CDATA[
	      SELECT COUNT(*) FROM orders
            where userNum = #{userNum}
            and orderType =2
	       ]]>
       </select>
       
            <!--구매전 선택된 장바구니 총개수 -->
       <select id="selectCartCount" resultType="int" parameterType="java.util.Map">
        <![CDATA[
	      SELECT COUNT(*) FROM orders
            where userNum = #{userNum}
            and orderType =3
	       ]]>
       </select>
       
        <!-- 구매전 장바구니 페이징   사용안함-->   
         <select id="selectCartList" resultType="map" parameterType="java.util.Map">
        <![CDATA[
      SELECT *
		FROM (
			SELECT ROWNUM RN, A.* 
				FROM (
				        SELECT o.ORDERNUM,o.USERNUM,o.ORDEREDAT,o.PRICE,o.CHARGE,o.ORDERSTATUS,
                        o.DELIVERYSTATUS,o.ORDERTYPE,o.PRODNUM,o.QUANTITY,o.PRODNAME,io.content as image
						FROM orders o,prodPhoto io, products p
                        where o.prodnum= io.prodnum
                        and io.prodnum=p.prodnum
                        and o.userNum = #{userNum}
                        and o.ordertype=3
                        and io.pphotonum=1
						ORDER BY o.prodNum desc       
						) A
				)
	  WHERE RN BETWEEN #{start} AND #{end}
        ]]>
        </select>
       
       
           <!-- 장바구니 삭제 -->
       <delete id="deleteCart" parameterType="java.util.Map">
	  delete from orders
	  where orderNum = #{orderNum}
	  and userNum = #{userNum}
	  and orderType=2
	   </delete>
	   
	    <!-- 장바구니 구매페이지 이동 전 테이블 수정 -->
	   <update id="modifyBeforeBuy"  parameterType="java.util.List">
        <foreach  item="item" collection="list"  index="index" 
      separator=";" open="DECLARE BEGIN" close="; END;" >
           UPDATE orders 
           SET PRICE = #{item.price}
           ,ORDERTYPE =3
           ,QUANTITY = #{item.quantity}
           ,ORDERSTATUS =1
           ,DELIVERYSTATUS =100
           ,ORDEREDAT =sysdate
           WHERE USERNUM= #{item.userNum}
           AND ORDERNUM= #{item.orderNum}
      </foreach>
       </update>
        
            <!-- 장바구니 결제 -->
        <update id="insertOrders"  parameterType="java.util.List">
        <foreach  item="item" collection="list"  index="index" 
      separator=";" open="DECLARE BEGIN" close="; END;" >
           UPDATE orders 
           SET PAYTOTAL = #{item.payTotal}
           ,ORDERTYPE =3
           ,QUANTITY = #{item.quantity}
           ,ORDERSTATUS =2
           ,DELIVERYSTATUS =200
           ,ORDEREDAT =sysdate
           WHERE USERNUM= #{item.userNum}
           AND ORDERNUM= #{item.orderNum}
      </foreach>
       </update>


               <!-- 즉시구매 -->
        <insert id="insertOrderOne"  parameterType="java.util.List">
        <selectKey resultType="int" keyProperty="orderNum" order="BEFORE">
	    	 select seq_orders.nextval from dual
	    </selectKey>
        <foreach  item="item" collection="list"  index="index" 
      separator=";" open="DECLARE BEGIN" close="; END;">
      insert into orders(ORDERNUM, USERNUM,ORDEREDAT,PRICE,PAYTOTAL,CHARGE,ORDERSTATUS,DELIVERYSTATUS,ORDERTYPE,PRODNUM,PRODNAME,QUANTITY)
      values(#{orderNum},#{item.userNum},SYSDATE,#{item.price},#{item.payTotal},3000,2,200,1,#{item.prodNum},#{item.prodName},#{item.quantity})
      </foreach>
       </insert>

	      <!-- orders (ordertype 일반구매 = 1, 장바구니 =2, 구매전장바구니 =3)
	                  (oderstatus 결제완료 =1, 미완료 =2)                               
	                  (deliverystatus 배송준비 =1, 배송중 =2, 배송완료=3)
	                  등록 -->
	              <!--     
 <insert id="insertOrders22222222222" parameterType="java.util.List"   >
		<selectKey resultType="int" keyProperty="orderNum" order="BEFORE">
	    	 select seq_orders.nextval from dual
	    </selectKey>
	    <![CDATA[
		   insert into orders(
		                ORDERNUM, 
		                USERNUM,
                    CARTNUM,
                    ORDEREDAT,
                    PRICE,
					CHARGE,
					ORDERSTATUS,
					DELIVERYSTATUS,
					ORDERTYPE,
					PRODNUM,
					PRODNAME,
					QUANTITY
				    )
					  			values(
					  			      #{orderNum},
					  			      #{userNum},
					  			      #{orderNum},
					  			      SYSDATE,
					  			      #{price},
					  			      3000,
					  			      1,
					  			      1,
					  			      1,
					  			      #{prodNum},
					  			      #{prodName},
					  			      #{quantity})
		]]>
	</insert> 
	 -->
	       <!-- 장바구니 추가 -->
	       <!-- orders (ordertype 일반구매 = 1, 장바구니 =2)
	                  (oderstatus 결제완료 =1, 미완료 =2)                               
	                  (deliverystatus 배송준비 =1,배송대기=2, 배송중 =3, 배송완료=4)
	                  등록 -->
	<!-- <insert id="addCart" parameterType="java.util.Map"   >
		<selectKey resultType="int" keyProperty="orderNum" order="BEFORE">
	    	 select seq_orders.nextval from dual
	    </selectKey>
	    <![CDATA[
		   insert into orders(
		                ORDERNUM, 
		                USERNUM,
                    ORDEREDAT,
                    PRICE,
					CHARGE,
					ORDERSTATUS,
					DELIVERYSTATUS,
					ORDERTYPE,
					PRODNUM,
					PRODNAME,
					QUANTITY
				    )
					  			
		]]>
		<choose>
		  <when test="type=='main'">
		  values(#{orderNum},#{userNum},SYSDATE,#{prodPrice},3000,1,100,2,#{prodNum},#{prodName},0)
		  </when>
		  <when test="type=='detail'">
		  values(#{orderNum},#{userNum},SYSDATE,#{prodPrice},3000,1,100,2,#{prodNum},#{prodName},#{quantity})
		  </when>
		</choose>
	</insert>  -->
	
	
	  <insert id="addCart" parameterType="java.util.List">
	   insert into orders(
		                ORDERNUM, 
		                USERNUM,
		                PRICE,
		                OPTIONNUM,
                    ORDEREDAT,
					CHARGE,
					ORDERSTATUS,
					DELIVERYSTATUS,
					ORDERTYPE,
					PRODNUM,
					QUANTITY
				    )
		        select  seq_orders.nextval as ORDERNUM, A .* from(
	 	<foreach collection="list" item="item" separator="union all" >
		        select  
				        #{item.userNum} as USERNUM,
				        #{item.price} as PRICE, 
				        #{item.optionNum} as OPTIONNUM,
				        CURRENT_TIMESTAMP as ORDEREDAT, 
				        3000 as CHARGE,
				        1 as ORDERSTATUS,
				        100 as DELIVERYSTATUS,
				        2 as ORDERTYPE,
				        #{item.prodNum}as PRODNUM,
				        #{item.quantity}as QUANTITY
				        from dual
   		 </foreach>)A
    </insert>
	 
	
	     <!-- 장바구니결제 후 payment -->
	<insert id="insertPaymentmultiple"  parameterType="java.util.Map">
	        <selectKey resultType="int" keyProperty="orderNum" order="BEFORE">
	    	 	select orderNum
            from orders
            where orderNum in (
               select max(orderNum)
               from orders
                  )
	    </selectKey>
    <foreach item="item"  collection="list"   open="INSERT ALL" 
                  separator=" " close="SELECT * FROM DUAL" >
       INTO payment(ORDERNUM,TYPE,CREATEDAT,BUYERNAME,MERCHANT_UID,IMP_UID,APPLY_NUM )
      
      <if test= "item.orderNum != null and item.orderNum == 0">
	   VALUES (#{orderNum},#{item.payType},sysdate,#{item.custName},#{item.merchant_uid},#{item.imp_uid},#{item.apply_num})
      </if>
      <if test= "item.orderNum != null and item.orderNum != 0">
      VALUES (#{item.orderNum},#{item.payType},sysdate,#{item.custName},#{item.merchant_uid},#{item.imp_uid},#{item.apply_num})
      </if>
    </foreach>
  </insert>
  
	
	<insert id="insertPayment" parameterType="java.util.Map"   >
		<selectKey resultType="int" keyProperty="orderNum" order="BEFORE">
	    	 	select orderNum
            from orders
            where orderNum in (
               select max(orderNum)
               from orders
                  )
	    </selectKey>
	    <![CDATA[
		   insert into payment(
		              ORDERNUM,
                       TYPE,
                       CREATEDAT,
                      BUYERNAME,
                      MERCHANT_UID,
                      IMP_UID,
                      APPLY_NUM 
				    )
					  			values(
					  			      #{orderNum},
					  			      #{payType},
					  			      sysdate,
					  			      #{custName},
					  			      #{merchant_uid},
					  			      #{imp_uid},
					  			      #{apply_num})
		]]>
	</insert> 
	
	
	<insert id="insertDelivery" parameterType="java.util.Map"   >
   		<selectKey resultType="int" keyProperty="deliNum" order="BEFORE">
         select seq_delivery.nextval from dual
	    </selectKey>
	    <![CDATA[
		   insert into delivery(
		                 USERNUM,
		                DELINUM, 
		                TYPE,
                    ADDRESS,
                    CREATEDAT,
                    DELIBASIC,
                   ZONECODE,
                  ADDRESS2,
                  CUSTNAME,
                   CUSTPHONE
				    )
		]]>
		<choose>
		 <when test="chooseAddress=='기본배송지'">
                values(#{userNum},#{deliNum},1,#{address1},sysdate,1,#{zoneCode},#{address2},#{custName},#{phoneNum})
              </when>
                 <when test="chooseAddress=='변경배송지'">
                values(#{userNum},#{deliNum},2,#{address1},sysdate,1,#{zoneCode},#{address2},#{custName},#{phoneNum})
              </when>
		</choose>
	</insert> 

	      <!-- 상품등록 -->
   <insert id="saveImage"  parameterType="java.util.Map">
   		<selectKey resultType="int" keyProperty="prodNum" order="BEFORE">
	    	select prodnum
            from products
            where CREATEDAT in (
               select max(CREATEDAT)
               from products
                  )
	    </selectKey>
    <foreach item="item"  collection="list"   open="INSERT ALL" 
                  separator=" " close="SELECT * FROM DUAL" >
      INTO prodphoto(PRODNUM,PPHOTONUM,CONTENT,CREATEDAT)
      VALUES (#{prodNum}, #{item.pPhotoNum}, #{item.content}, sysdate)
    </foreach>
  </insert>
  
  	      <!-- 중고물품 신청 -->
   <insert id="saveUsedImage"  parameterType="java.util.List">
   		 <selectKey resultType="int" keyProperty="prodNum" order="BEFORE">
	    	select prodnum
            from products
            where CREATEDAT in (
               select max(CREATEDAT)
               from products
                  )
	    </selectKey>
    <foreach item="item"  collection="list"   open="INSERT ALL" 
                  separator=" " close="SELECT * FROM DUAL" >
      INTO prodphoto(PRODNUM,PPHOTONUM,CONTENT,ORIGINALFILENAME,CREATEDAT)
      VALUES (#{prodNum}, #{item.pphotoNum}, #{item.content},#{item.originalFileName}, sysdate)
    </foreach>
  </insert>
   
      <!--     상품 디테일사진
      <insert id="saveUsedDetailImage"  parameterType="java.util.List">
   		<selectKey resultType="int" keyProperty="prodNum" order="BEFORE">
	    	select prodnum
            from products
            where CREATEDAT in (
               select max(CREATEDAT)
               from products
                  )
	    </selectKey>
    <foreach item="item"  collection="list"   open="INSERT ALL" 
                  separator=" " close="SELECT * FROM DUAL" >
      INTO prodphoto(PRODNUM,PPHOTONUM,contentDetail,CREATEDAT)
      VALUES (#{prodNum}, #{item.pphotoNum}, #{item.contentDetail}, sysdate)
    </foreach>
  </insert> -->
  
           <!-- 상품 디테일사진 테스트 -->
    <insert id="saveUsedDetailImage"  parameterType="java.util.List">
    <selectKey resultType="int" keyProperty="prodNum" order="BEFORE">
	    	select prodnum
            from products
            where CREATEDAT in (
               select max(CREATEDAT)
               from products
                  )
	    </selectKey>
       <foreach item="item"  collection="list"   open="INSERT ALL" 
                  separator=" " close="SELECT * FROM DUAL" >
      INTO prodphoto(PRODNUM,PPHOTONUM,contentDetail,CREATEDAT)
      VALUES (#{prodNum}, #{item.pphotoNum}, #{item.contentDetail},sysdate)
    </foreach>
       </insert>
       
       
       
       
  
  
                  <!-- prodnum -->  
        <select id="prodnum" resultType="int" >
        <![CDATA[
	    	select prodnum
            from products
            where prodnum in (
               select max(prodnum)
               from products
                  )
        ]]>
        </select>
            <!-- optionnum dd -->  
        <select id="optionNum" resultType="int" >
        <![CDATA[
         select prodOption_seq.nextval from dual
        ]]>
        </select>
        
  
              <!-- 옵션 등록  문제는 시퀀스가 한번밖에 돌지않아 2번재부터 에러발생-->
    <!-- <insert id="addOption"  parameterType="java.util.List">
       <foreach item="item"  collection="list"   open="INSERT ALL" 
                  separator=" " close="SELECT * FROM DUAL" >
      INTO prodoption(OPTIONNUM,PRODNUM,PRODSIZE,COLOR,QUANTITY,PRODSTATUS,UPDATEDATE)
      VALUES (#{item.optionNum},#{item.prodNum}, #{item.prodSize}, #{item.color},#{item.quantity},#{item.prodStatus},sysdate)
    </foreach>      
     </insert> -->
 
       <insert id="addOption" parameterType="java.util.List">
	 insert into prodoption (
	   			OPTIONNUM,
		        PRODNUM, 
		        PRODSIZE,
		        COLOR, 
		        QUANTITY,
		        PRODSTATUS,
		        UPDATEDATE
		         )
		        select  prodOption_seq.nextval as OPTIONNUM, A .* from(
	 	<foreach collection="list" item="item" separator="union all" >
		        select  
				        #{item.prodNum} as prodNum, 
				        #{item.prodSize}as prodSize, 
				        #{item.color}as color, 
				        #{item.quantity}as quantity, 
				        #{item.prodStatus}as prodStatus,
				        CURRENT_TIMESTAMP as UPDATEDATE
				        from dual
   		 </foreach>)A
    </insert>
   
   
                <!-- 글목록 이미지 하나 -->  
        <select id="getByteImage" resultMap="e_P002_D003PhotoVO" parameterType="e_P002_D003PhotoVO">
        <![CDATA[
            SELECT content
            FROM prodphoto
            WHERE pphotoNum = 1 and prodNum = #{prodNum}
            ORDER BY prodNum
        ]]>
        </select>
        
                        <!-- 상품상세 이미지 하나 -->  
        <select id="detailImage" resultMap="productAfterVO" parameterType="productAfterVO">
        <![CDATA[
            SELECT photo
            FROM productafter
            WHERE afterNum = #{afterNum}
        ]]>
        </select>
        
          
     <select id="shopMainText" resultMap="e_P002_D003ProductsVO" parameterType="e_P002_D003ProductsVO">
        <![CDATA[
           select p.prodNum,p.name,p.price,p.content
          from products p inner join prodphoto i on p.prodnum =i.prodnum
          where i.pphotonum=1
          order by p.prodNum
        ]]>
        </select>


	          <!-- 상품 상세내용 등록 -->
	 <insert id="addProduct" parameterType="java.util.Map"   >
		<selectKey resultType="String" keyProperty="prodNum" order="BEFORE">
	    	select seq_prod_prodNum.nextval from dual
	    </selectKey>
	    <![CDATA[
		   insert into products(
		                prodNum, 
                    name,
                    price,
                    content,
					Quantity,
					type,
					createdAt
				    )
					  			values(
					  			      #{prodNum},
					  			      #{name},
					  			      #{price},
					  			      #{content},
					  			      #{type},
					  			      sysdate)
		]]>
	</insert> 
	
	
	          <!-- 중고 상세내용 등록 -->
	 <insert id="addUsedPro" parameterType="java.util.Map">
		<selectKey resultType="int" keyProperty="prodNum" order="BEFORE">
	    	select seq_prod_prodNum.nextval from dual
	    </selectKey>
	    <![CDATA[
		   insert into products(
		                prodNum, 
		                PRODCATEGORYNUM,
                    name,
                    price,
                    content,
					type,
					createdAt,
					userNum
				    )
					  			values(
					  			      #{prodNum},
					  			      #{parentCategoryNum},
					  			      #{name},
					  			      #{price},
					  			      #{content},
					  			      #{type},
					  			      sysdate,
					  			      #{userNum})
		]]>
	</insert>
	
	
	
          <!-- 중고 카테고리 등록 -->
	 <insert id="addUsedCategory" parameterType="java.util.Map"   >
		<selectKey resultType="int" keyProperty="prodCategoryNum" order="BEFORE">
	    	select seq_category.nextval from dual
	    </selectKey>
	    <![CDATA[
		   insert into prodcategory(
		                prodCategoryNum, 
		                PARENTCATEGORYNUM,
		                prodNum
				    )
					  			values(
					  			      #{prodCategoryNum},
					  			      #{parentCategoryNum},
					  			      #{prodNum})
		]]>
	</insert>  
	
	          <!-- 상품 후기 After 등록 -->
	 <insert id="addAfter" parameterType="java.util.Map"   >
		<selectKey resultType="int" keyProperty="afterNum" order="BEFORE">
	    	select seq_after.nextval from dual
	    </selectKey>
	    <![CDATA[
		   insert into productafter (
		                 userNum,
		                afterNum, 
		                prodNum,
                    content,
                    photo,
                    photoName,
					createDat,
					evalue
				    )
					  			values(
					  			       #{afterNum},
					  			      #{afterNum},
					  			      #{prodNum},
					  			      #{content},
					  			      #{photo},
					  			      #{photoName},
					  			      sysdate,
					  			      #{evalue})
		]]>
	</insert> 
	      <!-- 상품 댓글 -->
	<insert id="addComent" parameterType="java.util.Map"   >
		<selectKey resultType="int" keyProperty="afterNum" order="BEFORE">
	    	select seq_after.nextval from dual
	    </selectKey>
	    <![CDATA[
		   insert into productafter (
		                 afterType,
		                 userNum,
		                afterNum, 
		                prodNum,
                    content,
					createDat
				    )
					  			values(
					  			     #{afterType},
					  			      #{afterNum},
					  			      #{afterNum},
					  			      #{prodNum},
					  			      #{content},
					  			      sysdate
					  			      )
		]]>
	</insert> 
	
	
	     <!-- TEST -->   
         <select id="test" resultType="OrdersVO" parameterType="java.util.Map">
        <![CDATA[
      SELECT *
		FROM orders
		where ordernum =#{orderNum}
        ]]>
        </select>
	
			
</mapper>