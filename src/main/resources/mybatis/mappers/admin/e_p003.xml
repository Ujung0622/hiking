<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="admin.mapper.e_p003">
	<resultMap id="e_p003Result03" type="e_p003VO">
		<result property="csPostNum" column="csPostNum"/> <!--문의 번호-->
		<result property="csBoardNum" column="csBoardNum"/><!--게시판번호  -->
		<result property="userNum" column="userNum"/><!--고객번호 -->
		<result property="title" column="title"/><!--제목 -->
		<result property="content" column="content"/><!--뮨의 내용  -->
		
		<result property="createdAt" column="createdAt"/><!--등록일자  -->
		<result property="updatedAt" column="updatedAt"/><!--수정일자  -->
		<result property="status" column="status"/><!--문의 상태  (1번 처리중, 2번 완료) -->
		<result property="csPostType" column="csPostType"/><!--글구분(공지사항 100, 문의사항 200, 신고글 300 ) -->
		
		<!-- 스트링 변환 -->
		<result property="createdAtString" column="createdAtString"/><!-- 등록일자 스트링 변환 -->
		<result property="updatedAtString" column="updatedAtString"/><!-- 수정일자 스트링 변환 -->
		<result property="statusString" column="statusString"/><!--문의 상태 스트링 변환 -->
		<result property="csPostTypeString" column="csPostTypeString"/><!--글 구분(공지사항 100, 문의사항 200, 신고글 300 ) 스트링 변환-->
		
		<!--유저테이블  상세보기에 사용-->
		<result property="id" column="id"/>
		<result property="name" column="name"/>
		<result property="email" column="email"/>
	</resultMap>

	<!-- 공지사항  등록 -->
 	<insert id="insertCSPost" parameterType="e_p003VO">
		<![CDATA[
		insert into CSPost (csPostNum,csBoardNum,userNum,title,content,createdAt,status, csPostType)
		VALUES (CSPost_seq.nextval, CSBOARD_seq.nextval, 1, #{title}, #{content}, CURRENT_TIMESTAMP, 2, 100)
		]]>
	</insert>  
	
	<!--조건 검색  -->
	<select id="selectUser" resultMap="e_p003Result03" parameterType="java.util.Map">
		 <![CDATA[
        select csPostNum,userNum,title,content,
        		DECODE(status, 1, '대기', 2, '완료')as statusString, 
        		DECODE(csPostType, 100, '공지', 200, '문의', 300, '신고')as csPostTypeString, 
        		to_char(createdAt,'YYYY-MM-DD HH24:MI:SS')as createdAtString 
		from   CSPost
      	]]>
    	<choose>
    		<when test="searchOption=='all'"> <!-- 전체 조회  -->
    		<!-- where csPostNum = csPostNum -->
    		</when>
    		<when test="searchOption=='csPostType100'"> <!-- 공지 전체 조회 -->
    		where  csPostType = 100
    		</when>
    		<when test="searchOption=='csPostType200'"> <!-- 문의 전체 조회  -->
    		where   csPostType = 200 
    		</when>
    		<when test="searchOption=='csPostType300'"> <!-- 신고 전체 조회  -->
    		where   csPostType = 300 
    		</when>
    		<when test="searchOption=='userNum'"> <!-- 작성자 id 조회  -->
    		where userNum in(SELECT userNum from users where id like '%'||#{key_word}||'%')
    		</when>
    		<when test="searchOption=='status'"> <!-- 처리 상태 조회  1- 처리대기, 2-완료 -->
    		where status= #{key_word1}
    		</when>
    	</choose>
	</select>
	
	
	<!-- 상세보기list -->
		<select id="selectViewDetaListt" resultMap="e_p003Result03" parameterType="java.util.Map">
		 <![CDATA[
        select c.csPostNum,c.csBoardNum,c.userNum,c.title,c.content, 
        		DECODE(c.csPostType, 100, '공지', 200, '문의', 300, '신고')as csPostTypeString, 
        		to_char(c.createdAt,'YYYY-MM-DD HH24:MI:SS')as createdAtString, 
        		to_char(c.updatedAt,'YYYY-MM-DD HH24:MI:SS')as updatedAtString,
                u.id,u.name,u.email
		from   CSPost c inner JOIN USERS u
        on c.usernum=u.usernum
         where csPostNum = #{csPostNum}
      	]]>
	</select>
	
	<!-- 상세보기 글 구분 가져오기 -->
		<select id="viewType" parameterType="int" resultType="string" >
		 <![CDATA[
       SELECT DECODE(csPostType, 100, '공지사항', 200, '문의사항', 300, '신고글')as csPostTypeString
		FROM cspost
		WHERE cspostnum = #{csPostNum}
      	]]>
	</select>
	
	<!-- 글 수정 -->
	 <update id="upDateCsBoard" parameterType="e_p003VO">
	  <![CDATA[
		UPDATE CSPost
			SET title = #{title},
    			content= #{content},
    			status= #{status},
    			updatedAt= CURRENT_TIMESTAMP
		WHERE csPostNum=#{csPostNum}
		 ]]>
	</update>
	
	<delete id="deleteUserCsboard"  parameterType="int">
	<![CDATA[
	   delete from  CSPost
	   where
	   csPostNum=#{csPostNum}
	]]>      
  </delete>
  
	
	
</mapper>