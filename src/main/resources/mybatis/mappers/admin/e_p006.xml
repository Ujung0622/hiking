<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="admin.mapper.e_p006">
	<resultMap id="e_p006Result06" type="e_p006VO">
		<result property="csposttypeString" column="csposttypeString"/> <!-- 글구분 스트링 -->
		<result property="csboardcnt" column="csboardcnt"/> <!--글 구분 카운트  -->
		
	</resultMap>
<!-- 	
	샘플 
	<select id="boardChart" resultMap="e_p006Result06">
	<![CDATA[
	select DECODE (CSPOSTTYPE,100,'공지글',200,'문의글', 300,'신고글')as csposttypeString, COUNT(*)as csboardcnt
	FROM cspost
	GROUP by DECODE (CSPOSTTYPE,100,'공지글',200,'문의글', 300,'신고글')
	]]>
	</select> -->
	
	<!--기준일조회 파이차트  cs 글 통계-->
	<select id="searchDatePieChart" resultMap="e_p006Result06" parameterType="java.util.Map">
	<![CDATA[
	select DECODE (CSPOSTTYPE,100,'공지글',200,'문의글', 300,'신고글')as csposttypeString, COUNT(*)as csboardcnt
	FROM cspost
    WHERE CREATEDAT BETWEEN TO_DATE(#{startDate},'YYYY-MM-DD') AND TO_DATE(#{endDate},'YYYY-MM-DD')
	GROUP by DECODE (CSPOSTTYPE,100,'공지글',200,'문의글', 300,'신고글')
	]]>
	</select>
	
	<!--기준일조회 컬럼차트 매출 그래프  -->
	<select id="searchDateColumnChart" resultMap="e_p006Result06" parameterType="java.util.Map">
	<![CDATA[
	select to_char(p.CREATEDAT, 'YYYY-MM-DD')as createdatString, sum(o.price)as sumPrice
	from orders o INNER JOIN payment p
	ON o.ordernum = p.ordernum
	WHERE p.createdat BETWEEN TO_DATE (#{startDate}, 'YYYY-MM-DD') AND TO_DATE (#{endDate}, 'YYYY-MM-DD')
	GROUP BY to_char(p.CREATEDAT, 'YYYY-MM-DD')
	ORDER BY createdatString ASC
	]]>
	</select>
	
	
	
	<!-- 셀렉트 조회 cs 글 통계  파이차트 -->
	<select id="selectPieChart" resultMap="e_p006Result06" parameterType="java.util.Map">
	<![CDATA[
	select DECODE (CSPOSTTYPE,100,'공지글',200,'문의글', 300,'신고글')as csposttypeString, COUNT(*)as csboardcnt
	FROM cspost
	]]>
	<choose>
    		<when test="key_word=='all'"> <!-- 전체 조회  -->
    			GROUP by DECODE (CSPOSTTYPE,100,'공지글',200,'문의글', 300,'신고글')
	
    		</when>
    		<when test="key_word=='toDay'"> <!-- 당일 조회 -->
    		 	WHERE CREATEDAT >= TO_DATE(#{st},'YYYY-MM-DD')
				GROUP by DECODE (CSPOSTTYPE,100,'공지글',200,'문의글', 300,'신고글')
    		</when>
    		<when test="key_word=='week_month'"> <!-- 1주, 2주, 1개월 조회 -->
    		 	 WHERE CREATEDAT BETWEEN TO_DATE(#{end},'YYYY-MM-DD') AND TO_DATE(#{st},'YYYY-MM-DD')
				GROUP by DECODE (CSPOSTTYPE,100,'공지글',200,'문의글', 300,'신고글')
    		</when>
    	</choose>
	</select>
	
	<!-- 셀렉트 조회  매출 통계 컬럼 차트 -->
	<select id="selectColumnChart" resultMap="e_p006Result06" parameterType="java.util.Map">
	<![CDATA[
	select to_char(p.CREATEDAT, 'YYYY-MM-DD')as createdatString, sum(o.price)as sumPrice
	from orders o INNER JOIN payment p
	ON o.ordernum = p.ordernum
	]]>
	<choose>
	
    		<when test="key_word=='all'"> <!-- 전체 조회  -->
    		GROUP BY to_char(p.CREATEDAT, 'YYYY-MM-DD')
			ORDER BY createdatString ASC
    		</when>
    		<when test="key_word=='toDay'"> <!-- 당일 조회 -->
    		WHERE p.createdat >= TO_DATE(#{st},'YYYY-MM-DD')
			GROUP BY to_char(p.CREATEDAT, 'YYYY-MM-DD')
			ORDER BY createdatString ASC
    		</when>
    		<when test="key_word=='week_month'"> <!-- 1주, 2주, 1개월 조회 -->
    		WHERE p.createdat BETWEEN TO_DATE(#{end},'YYYY-MM-DD') AND TO_DATE(#{st},'YYYY-MM-DD')
			GROUP BY to_char(p.CREATEDAT, 'YYYY-MM-DD')
			ORDER BY createdatString ASC
    		</when>
    	</choose>
	</select>
   
	
	

	
	
<!-- 
	게시글 등록 
 	<insert id="insertCSPost" parameterType="e_p003VO">
		<![CDATA[
		insert into CSPost (csPostNum,csBoardNum,userNum,title,content,createdAt,status, csPostType)
		VALUES (CSPost_seq.nextval, CSBOARD_seq.nextval, 1, #{title}, #{content}, CURRENT_TIMESTAMP, 1, 100)
		]]>
	</insert>  
	
	조건 검색 
	<select id="selectUser" resultMap="e_p003Result03" parameterType="java.util.Map">
		 <![CDATA[
        select csPostNum,csBoardNum,userNum,title,content,
        		DECODE(status, 1, '처리대기', 2, '완료')as statusString, 
        		DECODE(csPostType, 100, '공지사항', 200, '문의사항', 300, '신고글')as csPostTypeString, 
        		to_char(createdAt,'YYYY-MM-DD HH24:MI:SS')as createdAtString, 
        		to_char(updatedAt,'YYYY-MM-DD HH24:MI:SS')as updatedAtString 
		from   CSPost
      	]]>
    	<choose>
    		<when test="searchOption=='all'"> 전체 조회 
    		where csPostNum = csPostNum
    		</when>
    		<when test="searchOption=='csPostType100'"> 공지 전체 조회
    		where  csPostType = 100
    		</when>
    		<when test="searchOption=='csPostType200'"> 문의 전체 조회 
    		where   csPostType = 200 
    		</when>
    		<when test="searchOption=='csPostType300'"> 신고 전체 조회 
    		where   csPostType = 300 
    		</when>
    		<when test="searchOption=='userNum'"> 작성자 id 조회 
    		where userNum in(SELECT userNum from users where id like '%'||#{key_word}||'%')
    		</when>
    		<when test="searchOption=='status'"> 처리 상태 조회  1- 처리대기, 2-완료
    		where status= #{key_word1}
    		</when>
    	</choose>
	</select>
	
	
	상세보기list
		<select id="selectViewDetaListt" resultMap="e_p003Result03" parameterType="java.util.Map">
		 <![CDATA[
        select c.csPostNum,c.csBoardNum,c.userNum,c.title,c.content, 
        		DECODE(c.csPostType, 100, '공지사항', 200, '문의사항', 300, '신고글')as csPostTypeString, 
        		to_char(c.createdAt,'YYYY-MM-DD HH24:MI:SS')as createdAtString, 
        		to_char(c.updatedAt,'YYYY-MM-DD HH24:MI:SS')as updatedAtString,
                u.id,u.name,u.email
		from   CSPost c inner JOIN USERS u
        on c.usernum=u.usernum
         where csPostNum = #{csPostNum}
      	]]>
	</select>
	
	글 수정
	 <update id="upDateCsBoard" parameterType="e_p003VO">
	  <![CDATA[
		UPDATE CSPost
			SET title = #{title},
    			content= #{content},
    			status= #{status},
    			updatedAt= CURRENT_TIMESTAMP
		WHERE csPostNum=#{csPostNum}
		 ]]>
	</update>
	
	<delete id="deleteUserCsboard"  parameterType="int">
	<![CDATA[
	   delete from  CSPost
	   where
	   csPostNum=#{csPostNum}
	]]>      
  </delete> -->
	
	
</mapper>